#include <stdio.h>

void threeSum(int arr[], int n) {
    int i, j, k;
    int triplets[100][3]; // store the triplets
    int count = 0; // count of unique triplets

    // sort the array
    for (i = 0; i < n; i++) {
        for (j = i + 1; j < n; j++) {
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }

    // find unique triplets
    for (i = 0; i < n - 2; i++) {
        if (i > 0 && arr[i] == arr[i - 1]) continue; // skip duplicates

        j = i + 1;
        k = n - 1;

        while (j < k) {
            int sum = arr[i] + arr[j] + arr[k];

            if (sum < 0) {
                j++;
            } else if (sum > 0) {
                k--;
            } else {
                triplets[count][0] = arr[i];
                triplets[count][1] = arr[j];
                triplets[count][2] = arr[k];
                count++;

                while (j < k && arr[j] == arr[j + 1]) j++; // skip duplicates
                while (j < k && arr[k] == arr[k - 1]) k--; // skip duplicates

                j++;
                k--;
            }
        }
    }

    // print the unique triplets
    printf("Unique Triplets:\n");
    for (i = 0; i < count; i++) {
        printf("[%d, %d, %d]\n", triplets[i][0], triplets[i][1], triplets[i][2]);
    }
}

int main() {
    int arr[] = {-1, 0, 1, 2, -1, -4};
    int n = sizeof(arr) / sizeof(arr[0]);

    threeSum(arr, n);

    return 0;
}
